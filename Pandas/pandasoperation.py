# -*- coding: utf-8 -*-
"""pandasoperation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_trPRKLy3I2YOTMfLIg1qiElk1G6EgaD
"""

import pandas as pd
import numpy as np

# Creating a broader DataFrame with more varied data
data = {
    'Name': [' john doe ', 'anna smith', 'peter pan', 'lucy li', 'michael johnson'],
    'Age': [28, 24, 35, 40, 22],
    'City': ['new york', 'berlin', 'london', 'new york', 'san francisco'],
    'Email': ['john.doe@example.com', 'anna.smith@berlin.de', 'peter.pan@london.co.uk', 'lucy.li@ny.com', 'michael.johnson@sfrc.com'],
    'Date of Birth': ['1993-05-15', '1997-08-22', '1986-12-10', '1981-03-03', '2000-09-28']
}

# Creating DataFrame
df = pd.DataFrame(data)
print("Original DataFrame:\n", df)

# 1. Data Cleaning and Standardization
# Remove leading/trailing spaces
df['Name'] = df['Name'].str.strip()

# Capitalize the first letter of each name in 'Name' column
df['Name'] = df['Name'].str.lower().str.capitalize()

# Capitalize the first letter of each word in 'City' column
df['City'] = df['City'].str.title()

# Filling missing 'Age' with the mean age
df['Age'] = df['Age'].fillna(df['Age'].mean())

# Removing duplicates (if any)
df = df.drop_duplicates()

# Renaming columns
df = df.rename(columns={'Name': 'Full Name', 'City': 'Location'})

# 2. Text Column Operations

# a. String Length: Calculate the length of each name
df['Name Length'] = df['Full Name'].str.len()

# b. Extracting First Name from 'Name' (Assuming first name is the first word)
df['First Name'] = df['Full Name'].str.split().str[0]

# c. Extracting Domain from 'Email'
df['Email Domain'] = df['Email'].str.split('@').str[1]

# d. Checking if 'Name' contains "john"
df['Has John'] = df['Full Name'].str.contains('john', case=False)

# e. Replacing "new york" with "NYC" in 'Location' column
df['Location'] = df['Location'].str.replace('New York', 'NYC')

# f. Convert 'Location' names to uppercase
df['Location Upper'] = df['Location'].str.upper()

# g. Extract the first 3 characters from 'Email'
df['Email Prefix'] = df['Email'].str[:3]

# h. Checking if 'Email' ends with ".com"
df['Is .com Email'] = df['Email'].str.endswith('.com')

# i. Concatenate 'First Name' and 'Location' into a new column 'Name & Location'
df['Name & Location'] = df['First Name'] + " from " + df['Location']

# j. Split 'Email' by '.' and take the first part
df['Email User'] = df['Email'].str.split('.').str[0]

# 3. Handle Date Columns (Example: Extracting Year, Month, Day)
df['Date of Birth'] = pd.to_datetime(df['Date of Birth'])
df['Birth Year'] = df['Date of Birth'].dt.year
df['Birth Month'] = df['Date of Birth'].dt.month
df['Birth Day'] = df['Date of Birth'].dt.day

# 4. Display the cleaned DataFrame with text operations applied
print("\nModified DataFrame with Text Operations:\n", df)

